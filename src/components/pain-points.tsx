'use client';

import { motion } from 'framer-motion';
import { CTAButton } from './cta-button';

interface PainPointsProps {
  onOpenForm: () => void;
}

const painPoints = [
  {
    icon: 'üéì',
    title: '–°—Ç—É–¥–µ–Ω—Ç',
    description: '–û–±–º–µ–∂–µ–Ω–∏–π –±—é–¥–∂–µ—Ç, –º–∞–ª–æ —á–∞—Å—É, –∞–ª–µ —Ö–æ—á–µ —ó—Å—Ç–∏ —Å–º–∞—á–Ω–æ',
    color: 'from-blue-500 to-blue-600',
  },
  {
    icon: 'üíº',
    title: '–î—ñ–ª–æ–≤–∞ –ª—é–¥–∏–Ω–∞',
    description: '–ü—Ä–∞—Ü—é—î –¥–æ–≤–≥–æ, –≤—Ç–æ–º–∏–≤—Å—è, –ø–æ—Ç—Ä—ñ–±–Ω–æ —à–≤–∏–¥–∫–æ —â–æ—Å—å –ø—Ä–∏–≥–æ—Ç—É–≤–∞—Ç–∏',
    color: 'from-purple-500 to-purple-600',
  },
  {
    icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
    title: '–°—ñ–º\'—è',
    description: '–†—ñ–∑–Ω—ñ —Å–º–∞–∫–∏, –¥–∏–µ—Ç–∏—á–Ω—ñ –æ–±–º–µ–∂–µ–Ω–Ω—è, –ø–æ—Ç—Ä—ñ–±–Ω–æ –≥–æ–¥—É–≤–∞—Ç–∏ –≤—Å—ñ—Ö',
    color: 'from-green-500 to-green-600',
  },
  {
    icon: 'ü•ó',
    title: '–ù–∞ –¥—ñ—î—Ç—ñ',
    description: '–®—É–∫–∞—î –∑–¥–æ—Ä–æ–≤—ñ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏, —Ä–∞—Ö—É—î –∫–∞–ª–æ—Ä—ñ—ó, —Ö–æ—á–µ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–æ—Å—Ç—ñ',
    color: 'from-emerald-500 to-emerald-600',
  },
  {
    icon: 'üë®‚Äçüç≥',
    title: '–ì—É—Ä–º–∞–Ω',
    description: '–ï–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É—î –∑ –Ω–æ–≤–∏–º–∏ —Å–º–∞–∫–∞–º–∏, —à—É–∫–∞—î –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è',
    color: 'from-orange-500 to-orange-600',
  },
  {
    icon: 'üå±',
    title: '–û—Å–æ–±–ª–∏–≤–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è',
    description: '–í–µ–≥–∞–Ω–∏, –∞–ª–µ—Ä–≥–µ—Ç–∏–∫–∏, –±–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–∞ –¥—ñ—î—Ç–∞ - –∑–Ω–∞–π–¥–µ–º–æ —Ä—ñ—à–µ–Ω–Ω—è',
    color: 'from-teal-500 to-teal-600',
  },
];

export function PainPoints({ onOpenForm }: PainPointsProps) {
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.2,
      },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.5,
        ease: 'easeOut',
      },
    },
  };

  return (
    <section className="py-20 bg-gray-50">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <motion.div
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true, margin: '-100px' }}
        >
          <h2 className="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 mb-6">
            –¶–µ –¥–ª—è —Ç–µ–±–µ, —è–∫—â–æ —Ç–∏...
          </h2>
          <p className="text-lg sm:text-xl text-gray-600 max-w-2xl mx-auto">
            Hungry Bot —Ä–æ–∑—É–º—ñ—î —Ç–≤–æ—ó –ø–æ—Ç—Ä–µ–±–∏ —ñ –¥–æ–ø–æ–º–æ–∂–µ –∑–Ω–∞–π—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç
          </p>
        </motion.div>

        <motion.div
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto"
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, margin: '-100px' }}
        >
          {painPoints.map((point, index) => (
            <motion.div
              key={point.title}
              className="group"
              variants={itemVariants}
            >
              <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-6 h-full transition-all duration-300 hover:shadow-xl hover:-translate-y-1">
                {/* Icon */}
                <div className={`w-16 h-16 rounded-full bg-gradient-to-r ${point.color} flex items-center justify-center text-3xl mb-4 mx-auto group-hover:scale-110 transition-transform duration-300`}>
                  {point.icon}
                </div>

                {/* Content */}
                <h3 className="text-xl font-semibold text-gray-900 mb-3 text-center">
                  {point.title}
                </h3>
                <p className="text-gray-600 text-center leading-relaxed">
                  {point.description}
                </p>
              </div>
            </motion.div>
          ))}
        </motion.div>

        {/* CTA Section */}
        <motion.div
          className="text-center mt-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.4 }}
          viewport={{ once: true, margin: '-100px' }}
        >
          <CTAButton
            onClick={onOpenForm}
            variant="primary"
            size="lg"
            buttonText="–î—ñ–∑–Ω–∞—Ç–∏—Å—å, —á–∏ –ø—ñ–¥—ñ–π–¥–µ –º–µ–Ω—ñ"
            location="pain_points"
            className="mx-auto"
          >
            –î—ñ–∑–Ω–∞—Ç–∏—Å—å, —á–∏ –ø—ñ–¥—ñ–π–¥–µ –º–µ–Ω—ñ
          </CTAButton>
        </motion.div>
      </div>
    </section>
  );
}
