'use client';

import { useState, useEffect, useRef } from 'react';
import { motion } from 'framer-motion';
import { CTAButton } from './cta-button';

export function AIVoiceAgent() {
  const [isConnecting, setIsConnecting] = useState(false);
  const [isConnected, setIsConnected] = useState(false);
  const [isAgentActive, setIsAgentActive] = useState(false);
  const [agentMessage, setAgentMessage] = useState('');
  const [messages, setMessages] = useState<Array<{type: 'user' | 'bot', text: string}>>([]);

  const wsRef = useRef<WebSocket | null>(null);
  const audioRef = useRef<HTMLAudioElement | null>(null);

  // WebSocket –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
  const connectWebSocket = () => {
    try {
      const ws = new WebSocket('wss://hungry-bot-websocket-server.onrender.com');
      
      ws.onopen = () => {
        console.log('‚úÖ WebSocket –∑\'—î–¥–Ω–∞–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        setIsConnected(true);
        setIsConnecting(false);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∞–∫—Ç–∏–≤—É—î–º–æ –∞–≥–µ–Ω—Ç–∞
        activateAgent();
      };
      
      ws.onmessage = (event) => {
        try {
          const data = JSON.parse(event.data);
          console.log('üì® –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', data);
          
          if (data.type === 'agent_speech') {
            // –ê–≥–µ–Ω—Ç –ø–æ—á–∏–Ω–∞—î –≥–æ–≤–æ—Ä–∏—Ç–∏
            setAgentMessage(data.message);
            setIsAgentActive(true);
            
            // –í—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –∞—É–¥—ñ–æ –≤—ñ–¥ ElevenLabs
            if (data.audioUrl) {
              playAgentAudio(data.audioUrl);
            }
            
            setMessages(prev => [...prev, { type: 'bot', text: data.message }]);
          } else if (data.type === 'agent_response') {
            // –í—ñ–¥–ø–æ–≤—ñ–¥—å –∞–≥–µ–Ω—Ç–∞
            setAgentMessage(data.message);
            setMessages(prev => [...prev, { type: 'bot', text: data.message }]);
          } else if (data.type === 'user_input') {
            // –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —â–æ—Å—å —Å–∫–∞–∑–∞–≤
            setMessages(prev => [...prev, { type: 'user', text: data.text }]);
          }
        } catch (error) {
          console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', error);
        }
      };
      
      ws.onerror = (error) => {
        console.error('‚ùå WebSocket –ø–æ–º–∏–ª–∫–∞:', error);
        setIsConnected(false);
        setIsConnecting(false);
        setIsAgentActive(false);
      };
      
      ws.onclose = () => {
        console.log('üëã WebSocket –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ');
        setIsConnected(false);
        setIsConnecting(false);
        setIsAgentActive(false);
      };
      
      wsRef.current = ws;
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è WebSocket:', error);
      setIsConnecting(false);
    }
  };

  // –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –∞–≥–µ–Ω—Ç–∞
  const activateAgent = () => {
    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {
      console.log('ü§ñ –ê–∫—Ç–∏–≤–∞—Ü—ñ—è Hungry Bot...');
      
      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∫–æ–º–∞–Ω–¥—É –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó
      wsRef.current.send(JSON.stringify({
        type: 'activate_agent',
        action: 'start_conversation'
      }));
    }
  };

  // –í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—É–¥—ñ–æ –≤—ñ–¥ –∞–≥–µ–Ω—Ç–∞
  const playAgentAudio = (audioUrl: string) => {
    if (audioRef.current) {
      audioRef.current.src = audioUrl;
      audioRef.current.play().catch(error => {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—É–¥—ñ–æ:', error);
      });
    }
  };

  // –ü–µ—Ä–µ—Ä–∏–≤–∞–Ω–Ω—è –∞–≥–µ–Ω—Ç–∞ –≥–æ–ª–æ—Å–æ–º
  const interruptAgent = () => {
    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {
      console.log('üé§ –ü–µ—Ä–µ—Ä–∏–≤–∞—é –∞–≥–µ–Ω—Ç–∞...');
      
      wsRef.current.send(JSON.stringify({
        type: 'interrupt_agent',
        action: 'user_speaking'
      }));
      
      setIsAgentActive(false);
    }
  };

  const handleConnect = async () => {
    setIsConnecting(true);
    connectWebSocket();
  };

  const handleDisconnect = () => {
    if (wsRef.current) {
      wsRef.current.close();
    }
    setIsConnected(false);
    setIsAgentActive(false);
    setAgentMessage('');
    setMessages([]);
  };

  // –û—á–∏—â–µ–Ω–Ω—è –ø—Ä–∏ —Ä–æ–∑–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ
  useEffect(() => {
    console.log("VOICE_AGENT_BUILD", "a8f67fc");
    
    return () => {
      if (wsRef.current) {
        wsRef.current.close();
      }
    };
  }, []);

  const containerVariants = {
    hidden: { opacity: 0, y: 30 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.6,
        ease: 'easeOut',
      },
    },
  };

  return (
    <section className="py-20 bg-gradient-to-br from-blue-50 to-indigo-50">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <motion.div
          className="max-w-4xl mx-auto text-center"
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, margin: '-100px' }}
        >
          {/* Header */}
          <motion.h2
            className="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 mb-6"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2, duration: 0.6 }}
            viewport={{ once: true }}
          >
            –°–ø–∏—Ç–∞–π —É Hungry Bot{' '}
            <span className="text-gradient">ü§ñ</span>
          </motion.h2>

          {/* Description */}
          <motion.p
            className="text-lg sm:text-xl text-gray-600 mb-12 max-w-2xl mx-auto leading-relaxed"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.4, duration: 0.6 }}
            viewport={{ once: true }}
          >
            Hungry Bot ‚Äî —Ç–≤—ñ–π –∫—É–ª—ñ–Ω–∞—Ä–Ω–∏–π AI-–∞—Å–∏—Å—Ç–µ–Ω—Ç! –ü—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É —ñ –ø–æ—á–Ω–∏ —Ä–æ–∑–º–æ–≤—É. 
            –ê–≥–µ–Ω—Ç —Å–∞–º –≤–µ–¥–µ –¥—ñ–∞–ª–æ–≥ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –≤—Å—ñ —Ç–≤–æ—ó –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ –∫—É—Ö–Ω—é.
          </motion.p>

          {/* AI Voice Agent Button */}
          <motion.div
            className="mb-8"
            initial={{ opacity: 0, scale: 0.9 }}
            whileInView={{ opacity: 1, scale: 1 }}
            transition={{ delay: 0.6, duration: 0.6 }}
            viewport={{ once: true }}
          >
            {!isConnected ? (
              <CTAButton
                onClick={handleConnect}
                variant="primary"
                size="lg"
                buttonText={isConnecting ? "üîó –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è..." : "ü§ñ –ó–∞–ø–∏—Ç–∞—Ç–∏ Hungry Bot"}
                location="ai_voice_agent"
                className="mx-auto text-lg px-8 py-4"
                disabled={isConnecting}
              />
            ) : (
              <div className="space-y-4">
                <div className="bg-white rounded-lg p-6 shadow-lg max-w-md mx-auto">
                  <h3 className="text-lg font-semibold mb-4">Hungry Bot –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ! ü§ñ‚ú®</h3>
                  
                  {/* –°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞ */}
                  {isAgentActive && (
                    <div className="mb-4 p-3 bg-green-100 rounded-lg">
                      <p className="text-green-800 text-sm">üé§ –ê–≥–µ–Ω—Ç –≥–æ–≤–æ—Ä–∏—Ç—å...</p>
                    </div>
                  )}
                  
                  {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–≥–µ–Ω—Ç–∞ */}
                  {agentMessage && (
                    <div className="mt-4 p-3 bg-blue-100 rounded-lg">
                      <p className="text-blue-800 text-sm">{agentMessage}</p>
                    </div>
                  )}
                  
                  {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ä–∏–≤–∞–Ω–Ω—è */}
                  <button
                    onClick={interruptAgent}
                    disabled={!isAgentActive}
                    className={`w-full py-3 px-6 rounded-lg font-medium transition-colors ${
                      isAgentActive 
                        ? 'bg-red-500 hover:bg-red-600 text-white' 
                        : 'bg-gray-300 text-gray-500 cursor-not-allowed'
                    }`}
                  >
                    üé§ –ü–µ—Ä–µ—Ä–≤–∞—Ç–∏ –∞–≥–µ–Ω—Ç–∞
                  </button>
                  
                  {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è */}
                  {messages.length > 0 && (
                    <div className="mt-4 space-y-2 max-h-40 overflow-y-auto">
                      {messages.map((msg, index) => (
                        <div
                          key={index}
                          className={`p-2 rounded-lg text-sm ${
                            msg.type === 'user' 
                              ? 'bg-blue-100 text-blue-800 ml-4' 
                              : 'bg-gray-100 text-gray-800 mr-4'
                          }`}
                        >
                          {msg.text}
                        </div>
                      ))}
                    </div>
                  )}
                  
                  {/* –ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è */}
                  <button
                    onClick={handleDisconnect}
                    className="mt-4 w-full py-2 px-4 bg-red-500 hover:bg-red-600 text-white rounded-lg transition-colors"
                  >
                    –í—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è
                  </button>
                </div>
              </div>
            )}
          </motion.div>

          {/* –ü—Ä–∏—Ö–æ–≤–∞–Ω–∏–π –∞—É–¥—ñ–æ –µ–ª–µ–º–µ–Ω—Ç */}
          <audio ref={audioRef} style={{ display: 'none' }} />

          {/* Feature Cards */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mt-16">
            {/* Card 1 */}
            <motion.div
              className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow"
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.8, duration: 0.6 }}
              viewport={{ once: true }}
            >
              <div className="w-12 h-12 bg-pink-100 rounded-lg flex items-center justify-center mb-4 mx-auto">
                <span className="text-2xl">ü§ñ</span>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">AI-–ê—Å–∏—Å—Ç–µ–Ω—Ç</h3>
              <p className="text-gray-600">
                Hungry Bot —Å–∞–º –≤–µ–¥–µ –¥—ñ–∞–ª–æ–≥ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –≤—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ –∫—É—Ö–Ω—é
              </p>
            </motion.div>

            {/* Card 2 */}
            <motion.div
              className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow"
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: 1.0, duration: 0.6 }}
              viewport={{ once: true }}
            >
              <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4 mx-auto">
                <span className="text-2xl">üé§</span>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">–ì–æ–ª–æ—Å–æ–≤–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å</h3>
              <p className="text-gray-600">
                –ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞ –º–æ–≤–∞ —á–µ—Ä–µ–∑ ElevenLabs —Ç–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–µ—Ä–µ—Ä–∏–≤–∞—Ç–∏ –∞–≥–µ–Ω—Ç–∞
              </p>
            </motion.div>

            {/* Card 3 */}
            <motion.div
              className="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow"
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: 1.2, duration: 0.6 }}
              viewport={{ once: true }}
            >
              <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4 mx-auto">
                <span className="text-2xl">üç≥</span>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">–ö—É–ª—ñ–Ω–∞—Ä–Ω–∞ –µ–∫—Å–ø–µ—Ä—Ç–∏–∑–∞</h3>
              <p className="text-gray-600">
                –°–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞—Ö, –∫—É—Ö–æ–Ω–Ω–∏—Ö –ø–æ—Ä–∞–¥–∞—Ö —Ç–∞ –∫—É–ª—ñ–Ω–∞—Ä–Ω–∏—Ö —Å–µ–∫—Ä–µ—Ç–∞—Ö
              </p>
            </motion.div>
          </div>

          {/* Footer Note */}
          <motion.p
            className="text-sm text-gray-500 mt-12 italic"
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ delay: 1.4, duration: 0.6 }}
            viewport={{ once: true }}
          >
            * Hungry Bot –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î ElevenLabs –¥–ª—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –≥–æ–ª–æ—Å—É —Ç–∞ AI –¥–ª—è —Ä–æ–∑—É–º–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
          </motion.p>
        </motion.div>
      </div>
    </section>
  );
}
