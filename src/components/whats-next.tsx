'use client';

import { motion } from 'framer-motion';
import { CTAButton } from './cta-button';

interface WhatsNextProps {
  onOpenForm: () => void;
}

const timelineSteps = [
  {
    month: '–ì—Ä—É–¥–µ–Ω—å 2025',
    title: '–ó–∞–ø—É—Å–∫ –±–µ—Ç–∞-–≤–µ—Ä—Å—ñ—ó',
    description: '–ü–µ—Ä—à—ñ 100 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –æ—Ç—Ä–∏–º–∞—é—Ç—å –¥–æ—Å—Ç—É–ø –¥–æ Hungry Bot',
    icon: 'üöÄ',
    color: 'from-primary-500 to-primary-600',
  },
  {
    month: '–°—ñ—á–µ–Ω—å 2026',
    title: '–†–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É',
    description: '–î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤, –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó',
    icon: '‚ö°',
    color: 'from-secondary-500 to-secondary-600',
  },
  {
    month: '–ë–µ—Ä–µ–∑–µ–Ω—å 2026',
    title: '–ü—É–±–ª—ñ—á–Ω–∏–π –∑–∞–ø—É—Å–∫',
    description: '–í—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–ª—è –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏',
    icon: 'üåç',
    color: 'from-accent-500 to-accent-600',
  },
];

const benefits = [
  {
    icon: 'üéØ',
    title: '–†–∞–Ω–Ω—ñ–π –¥–æ—Å—Ç—É–ø',
    description: '–ë—É–¥—å –ø–µ—Ä—à–∏–º, —Ö—Ç–æ —Å–ø—Ä–æ–±—É—î Hungry Bot',
  },
  {
    icon: 'üí¨',
    title: '–ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–∞–Ω–∞–ª',
    description: '–ï–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –Ω–æ–≤–∏–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç—É',
  },
  {
    icon: 'ü§ù',
    title: '–í–ø–ª–∏–≤ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç',
    description: '–¢–≤–æ—è –¥—É–º–∫–∞ –º–∞—Ç–∏–º–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É',
  },
  {
    icon: 'üéÅ',
    title: '–†–æ–∑—ñ–≥—Ä–∞—à –ü—Ä–µ–º—ñ—É–º –ø–ª–∞–Ω—ñ–≤',
    description: '3 –ü—Ä–µ–º—ñ—É–º –ø–ª–∞–Ω–∏ –Ω–∞ –º—ñ—Å—è—Ü—å —Å–µ—Ä–µ–¥ –ø–µ—Ä—à–∏—Ö 100 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤',
  },
];

export function WhatsNext({ onOpenForm }: WhatsNextProps) {
  const getBenefitGradient = (index: number) => {
    const gradients = [
      'from-pink-300 to-blue-300',    // Light pink to light blue
      'from-orange-300 to-blue-300',  // Light orange to light blue
      'from-orange-300 to-yellow-300', // Light orange to light yellow
      'from-orange-300 to-amber-300',  // Light orange to light brown
    ];
    return gradients[index % gradients.length];
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
        delayChildren: 0.1,
      },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.6,
        ease: 'easeOut',
      },
    },
  };

  return (
    <section className="py-20 bg-white">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <motion.div
          className="text-center mb-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true, margin: '-100px' }}
        >
          <h2 className="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 mb-6">
            –©–æ –±—É–¥–µ –¥–∞–ª—ñ?
          </h2>
          <p className="text-lg sm:text-xl text-gray-600 max-w-3xl mx-auto">
            Hungry Bot –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –≤ –≥—Ä—É–¥–Ω—ñ 2025. –ü—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ —Ä–∞–Ω–Ω—å–æ–≥–æ –¥–æ—Å—Ç—É–ø—É 
            —Ç–∞ –æ—Ç—Ä–∏–º–∞–π –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏.
          </p>
        </motion.div>

        {/* Timeline */}
        <motion.div
          className="mb-20"
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, margin: '-100px' }}
        >
          <div className="relative">
            {/* Timeline line */}
            <div className="absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-gradient-to-b from-primary-200 to-secondary-200"></div>
            
            <div className="space-y-12">
              {timelineSteps.map((step, index) => (
                <motion.div
                  key={step.month}
                  className={`relative flex items-center ${
                    index % 2 === 0 ? 'flex-row' : 'flex-row-reverse'
                  }`}
                  variants={itemVariants}
                >
                  {/* Timeline dot */}
                  <div className={`absolute left-1/2 transform -translate-x-1/2 w-6 h-6 bg-gradient-to-r ${step.color} rounded-full shadow-lg z-10`}></div>
                  
                  {/* Content */}
                  <div className={`w-5/12 ${index % 2 === 0 ? 'pr-8 text-right' : 'pl-8 text-left'}`}>
                    <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-6">
                      <div className={`w-16 h-16 bg-gradient-to-r ${step.color} rounded-2xl flex items-center justify-center text-3xl mb-4 mx-auto`}>
                        {step.icon}
                      </div>
                      <div className="text-sm text-primary-600 font-semibold mb-2">
                        {step.month}
                      </div>
                      <h3 className="text-xl font-semibold text-gray-900 mb-2">
                        {step.title}
                      </h3>
                      <p className="text-gray-600">
                        {step.description}
                      </p>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </motion.div>

        {/* Benefits */}
        <motion.div
          className="mb-16"
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, margin: '-100px' }}
        >
          <h3 className="text-2xl font-bold text-gray-900 text-center mb-12">
            –ü–µ—Ä–µ–≤–∞–≥–∏ —Ä–∞–Ω–Ω—å–æ–≥–æ –¥–æ—Å—Ç—É–ø—É
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {benefits.map((benefit, index) => (
              <motion.div
                key={benefit.title}
                className="text-center"
                variants={itemVariants}
              >
                <div className="bg-gray-50 rounded-xl p-6 h-full border border-gray-200">
                  <div className={`w-16 h-16 bg-gradient-to-r ${getBenefitGradient(index)} rounded-2xl flex items-center justify-center text-3xl mb-4 mx-auto`}>
                    {benefit.icon}
                  </div>
                  <h4 className="text-lg font-semibold text-gray-900 mb-2">
                    {benefit.title}
                  </h4>
                  <p className="text-gray-600 text-sm">
                    {benefit.description}
                  </p>
                </div>
              </motion.div>
            ))}
          </div>
        </motion.div>

        {/* CTA Section */}
        <motion.div
          className="text-center"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.4 }}
          viewport={{ once: true, margin: '-100px' }}
        >
          <div className="bg-gradient-to-r from-primary-50 to-secondary-50 rounded-2xl p-8 max-w-4xl mx-auto border border-primary-100">
            <h3 className="text-2xl font-semibold text-gray-900 mb-4">
              üéØ –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏ –∑–∞–ø—É—Å–∫!
            </h3>
            <p className="text-gray-600 text-lg mb-8">
              –ú—ñ—Å—Ü—è –≤ –±–µ—Ç–∞-—Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ –æ–±–º–µ–∂–µ–Ω—ñ. –ó–∞–ø–æ–≤–Ω–∏ —Ñ–æ—Ä–º—É –∑–∞—Ä–∞–∑ —ñ –≥–∞—Ä–∞–Ω—Ç—É–π —Å–æ–±—ñ 
              —Ä–∞–Ω–Ω—ñ–π –¥–æ—Å—Ç—É–ø –¥–æ Hungry Bot –∑ —É—Å—ñ–º–∞ –ø–µ—Ä–µ–≤–∞–≥–∞–º–∏.
            </p>
            
            <CTAButton
              onClick={onOpenForm}
              variant="primary"
              size="lg"
              buttonText="üéü –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ –º—ñ—Å—Ü–µ"
              location="whats_next"
              className="mx-auto"
            >
              üéü –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ –º—ñ—Å—Ü–µ
            </CTAButton>
            
            <p className="text-sm text-gray-500 mt-4">
              ‚è∞ –û–±–º–µ–∂–µ–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º—ñ—Å—Ü—å ‚Ä¢ –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ ‚Ä¢ –ë–µ–∑ –∑–æ–±–æ–≤'—è–∑–∞–Ω—å
            </p>
          </div>
        </motion.div>
      </div>
    </section>
  );
}
