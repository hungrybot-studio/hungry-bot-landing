// Google Apps Script –¥–ª—è Hungry Bot
// –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–æ–±–ª—è—î CORS —Ç–∞ preflight –∑–∞–ø–∏—Ç–∏

// ID –≤–∞—à–æ—ó Google —Ç–∞–±–ª–∏—Ü—ñ (–∑–∞–ª–∏—à–∞—î–º–æ –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏)
const SPREADSHEET_ID = '14GY5TXBOsDBEqorkZF7fTy2O4MWbufHrODLi-xo5WCK';
const SHEET_NAME = '–ê—Ä–∫—É—à1';

/**
 * –û–±—Ä–æ–±–ª—è—î GET –∑–∞–ø–∏—Ç–∏ (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è)
 */
function doGet(e) {
  return createCORSResponse({
    data: {
      message: '–í–µ–±—Ö—É–∫ Hungry Bot V2 –∞–∫—Ç–∏–≤–Ω–∏–π',
      timestamp: new Date().toISOString(),
      status: 'success'
    }
  });
}

/**
 * –û–±—Ä–æ–±–ª—è—î POST –∑–∞–ø–∏—Ç–∏ (–æ—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ —Ñ–æ—Ä–º–∏)
 */
function doPost(e) {
  try {
    // –õ–æ–≥—É—î–º–æ –≤—Ö—ñ–¥–Ω–∏–π –∑–∞–ø–∏—Ç
    console.log('üì® –û—Ç—Ä–∏–º–∞–Ω–æ POST –∑–∞–ø–∏—Ç:', JSON.stringify(e));
    
    // –ü–∞—Ä—Å–∏–º–æ –¥–∞–Ω—ñ –∑ –∑–∞–ø–∏—Ç—É
    let formData;
    try {
      formData = JSON.parse(e.postData.contents);
    } catch (parseError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É JSON:', parseError);
      return createCORSResponse({
        data: {
          success: false,
          error: '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç JSON',
          timestamp: new Date().toISOString()
        }
      });
    }

    // –í–∞–ª—ñ–¥—É—î–º–æ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è
    if (!formData.problem || !formData.cook_freq || !formData.tg_ok || 
        !formData.tone || !formData.style_preference || !formData.primary_goal || 
        !formData.payment_willingness || !formData.fair_price || !formData.consent) {
      return createCORSResponse({
        data: {
          success: false,
          error: '–í—ñ–¥—Å—É—Ç–Ω—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è',
          timestamp: new Date().toISOString()
        }
      });
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–≥–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if (formData.consent !== true) {
      return createCORSResponse({
        data: {
          success: false,
          error: '–ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∑–≥–æ–¥–∞ –∑ —É–º–æ–≤–∞–º–∏',
          timestamp: new Date().toISOString()
        }
      });
    }

    // –ó–∞–ø–∏—Å—É—î–º–æ –¥–∞–Ω—ñ –≤ —Ç–∞–±–ª–∏—Ü—é
    const result = writeToSpreadsheet(formData);
    
    if (result.success) {
      console.log('‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—é');
      return createCORSResponse({
        data: {
          success: true,
          message: '–î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ',
          timestamp: new Date().toISOString(),
          leadId: result.leadId
        }
      });
    } else {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É –≤ —Ç–∞–±–ª–∏—Ü—é:', result.error);
      return createCORSResponse({
        data: {
          success: false,
          error: '–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö',
          timestamp: new Date().toISOString()
        }
      });
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ doPost:', error);
    return createCORSResponse({
      data: {
        success: false,
        error: '–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
        timestamp: new Date().toISOString()
      }
    });
  }
}

/**
 * –û–±—Ä–æ–±–ª—è—î OPTIONS –∑–∞–ø–∏—Ç–∏ (preflight –¥–ª—è CORS) - –ö–õ–Æ–ß–û–í–ê –§–£–ù–ö–¶–Ü–Ø!
 */
function doOptions(e) {
  console.log('üîÑ –û–±—Ä–æ–±–∫–∞ preflight OPTIONS –∑–∞–ø–∏—Ç—É');
  
  // –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
  const response = ContentService.createTextOutput();
  
  // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç—É
  response.setMimeType(ContentService.MimeType.TEXT);
  
  // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
  response.setContent('Preflight OK');
  
  console.log('‚úÖ Preflight –∑–∞–ø–∏—Ç –æ–±—Ä–æ–±–ª–µ–Ω–æ –∑ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏');
  return response;
}

/**
 * –°—Ç–≤–æ—Ä—é—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
 */
function createCORSResponse({ data }) {
  const response = ContentService.createTextOutput();
  
  // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç—É
  response.setMimeType(ContentService.MimeType.JSON);
  
  // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
  response.setContent(JSON.stringify(data));
  
  return response;
}

/**
 * –ó–∞–ø–∏—Å—É—î –¥–∞–Ω—ñ –≤ Google —Ç–∞–±–ª–∏—Ü—é
 */
function writeToSpreadsheet(formData) {
  try {
    console.log('üìä –°–ø—Ä–æ–±–∞ –∑–∞–ø–∏—Å—É –≤ —Ç–∞–±–ª–∏—Ü—é...');
    console.log('üîç –ù–∞–∑–≤–∞ –∞—Ä–∫—É—à–∞:', SHEET_NAME);
    
    // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç–∏–≤–Ω—É —Ç–∞–±–ª–∏—Ü—é (–∑–∞–º—ñ—Å—Ç—å openById)
    let spreadsheet;
    try {
      spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
      console.log('‚úÖ –ê–∫—Ç–∏–≤–Ω—É —Ç–∞–±–ª–∏—Ü—é –∑–Ω–∞–π–¥–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω—É —Ç–∞–±–ª–∏—Ü—é:', error);
      return { success: false, error: '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ —Ç–∞–±–ª–∏—Ü—ñ' };
    }
    
    const sheet = spreadsheet.getSheetByName(SHEET_NAME);
    
    if (!sheet) {
      console.error('‚ùå –ê—Ä–∫—É—à –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ:', SHEET_NAME);
      console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ñ –∞—Ä–∫—É—à—ñ:', spreadsheet.getSheets().map(s => s.getName()));
      return { success: false, error: `–ê—Ä–∫—É—à "${SHEET_NAME}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ` };
    }
    
    console.log('‚úÖ –ê—Ä–∫—É—à –∑–Ω–∞–π–¥–µ–Ω–æ:', SHEET_NAME);
    
    // –ü—ñ–¥–≥–æ—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –∑–∞–ø–∏—Å—É
    const rowData = [
      new Date(), // Timestamp
      formData.email || '',
      formData.telegram || '',
      formData.problem,
      formData.cook_freq,
      formData.tg_ok,
      formData.tone,
      formData.blocker || '',
      formData.style_preference,
      formData.primary_goal,
      formData.payment_willingness,
      formData.fair_price,
      formData.consent ? '–¢–∞–∫' : '–ù—ñ',
      formData.utm_source || '',
      formData.utm_medium || '',
      formData.utm_campaign || '',
      formData.referrer || '',
      formData.landing_variant || 'A'
    ];
    
    console.log('üìù –î–∞–Ω—ñ –¥–ª—è –∑–∞–ø–∏—Å—É:', rowData);
    
    // –ó–∞–ø–∏—Å—É—î–º–æ –¥–∞–Ω—ñ
    sheet.appendRow(rowData);
    
    // –û—Ç—Ä–∏–º—É—î–º–æ ID —Ä—è–¥–∫–∞ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
    const lastRow = sheet.getLastRow();
    const leadId = `LEAD_${Date.now()}_${lastRow}`;
    
    console.log('‚úÖ –î–∞–Ω—ñ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ —Ä—è–¥–æ–∫:', lastRow);
    console.log('üÜî ID –ª—ñ–¥–∞:', leadId);
    
    return { 
      success: true, 
      leadId: leadId,
      rowNumber: lastRow 
    };
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É –≤ —Ç–∞–±–ª–∏—Ü—é:', error);
    console.error('‚ùå –î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏:', error.toString());
    return { 
      success: false, 
      error: error.toString() 
    };
  }
}

/**
 * –¢–µ—Å—Ç–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–±–æ—Ç–∏ —Å–∫—Ä–∏–ø—Ç—É
 */
function testScript() {
  console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç—É...');
  
  // –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è CORS –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
  try {
    const testResponse = createCORSResponse({
      data: { message: '–¢–µ—Å—Ç —É—Å–ø—ñ—à–Ω–∏–π' }
    });
    console.log('‚úÖ –¢–µ—Å—Ç CORS –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø—Ä–æ–π–¥–µ–Ω–æ');
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ CORS –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', error);
  }
  
  // –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Ç–∞–±–ª–∏—Ü—ñ
  try {
    console.log('üîç –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Ç–∞–±–ª–∏—Ü—ñ...');
    console.log('üîç –ù–∞–∑–≤–∞ –∞—Ä–∫—É—à–∞:', SHEET_NAME);
    
    const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    console.log('‚úÖ –ê–∫—Ç–∏–≤–Ω—É —Ç–∞–±–ª–∏—Ü—é –∑–Ω–∞–π–¥–µ–Ω–æ');
    
    const sheet = spreadsheet.getSheetByName(SHEET_NAME);
    
    if (sheet) {
      console.log('‚úÖ –ê—Ä–∫—É—à –∑–Ω–∞–π–¥–µ–Ω–æ:', SHEET_NAME);
      console.log('üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤:', sheet.getLastRow());
      console.log('üìã –ù–∞–∑–≤–∏ –∫–æ–ª–æ–Ω–æ–∫:', sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0]);
    } else {
      console.log('‚ö†Ô∏è –ê—Ä–∫—É—à –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ñ –∞—Ä–∫—É—à—ñ:', spreadsheet.getSheets().map(s => s.getName()));
    }
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Ç–∞–±–ª–∏—Ü—ñ:', error);
  }
  
  console.log('üèÅ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}
