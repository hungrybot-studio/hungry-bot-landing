const { WebSocketServer } = require('ws');

// –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ä—Ç –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ 8080 –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
const PORT = process.env.PORT || 8080;

// –°—Ç–≤–æ—Ä—é—î–º–æ WebSocket —Å–µ—Ä–≤–µ—Ä
const wss = new WebSocketServer({ port: PORT });

console.log(`üöÄ WebSocket —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);

// –û–±—Ä–æ–±–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω—å
wss.on('connection', (ws, req) => {
  const clientIP = req.socket.remoteAddress;
  console.log(`‚úÖ –ù–æ–≤–∏–π –∫–ª—ñ—î–Ω—Ç –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è: ${clientIP}`);

  // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
  ws.send(JSON.stringify({
    type: 'welcome',
    message: '–í—ñ—Ç–∞—é! WebSocket —Å–µ—Ä–≤–µ—Ä —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ.',
    timestamp: new Date().toISOString()
  }));

  // –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞
  ws.on('message', (data) => {
    try {
      const message = JSON.parse(data.toString());
      console.log(`üì® –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ ${clientIP}:`, message);

      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –µ—Ö–æ-–≤—ñ–¥–ø–æ–≤—ñ–¥—å
      const echoResponse = {
        type: 'echo',
        originalMessage: message,
        timestamp: new Date().toISOString(),
        serverInfo: {
          port: PORT,
          uptime: process.uptime()
        }
      };

      ws.send(JSON.stringify(echoResponse));
      console.log(`üîÑ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –µ—Ö–æ-–≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–ª—ñ—î–Ω—Ç—É ${clientIP}`);

    } catch (error) {
      console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ ${clientIP}:`, error);
      
      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
      ws.send(JSON.stringify({
        type: 'error',
        message: '–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–æ—Ä–º–∞—Ç JSON.',
        timestamp: new Date().toISOString()
      }));
    }
  });

  // –û–±—Ä–æ–±–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è –∑'—î–¥–Ω–∞–Ω–Ω—è
  ws.on('close', () => {
    console.log(`üëã –ö–ª—ñ—î–Ω—Ç –≤—ñ–¥–∫–ª—é—á–∏–≤—Å—è: ${clientIP}`);
  });

  // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
  ws.on('error', (error) => {
    console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ WebSocket –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞ ${clientIP}:`, error);
  });
});

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞
wss.on('error', (error) => {
  console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ WebSocket —Å–µ—Ä–≤–µ—Ä–∞:', error);
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('\nüõë –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–∫—Ä–∏–≤–∞—é —Å–µ—Ä–≤–µ—Ä...');
  wss.close(() => {
    console.log('‚úÖ WebSocket —Å–µ—Ä–≤–µ—Ä —É—Å–ø—ñ—à–Ω–æ –∑–∞–∫—Ä–∏—Ç–æ');
    process.exit(0);
  });
});

process.on('SIGTERM', () => {
  console.log('\nüõë –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–∫—Ä–∏–≤–∞—é —Å–µ—Ä–≤–µ—Ä...');
  wss.close(() => {
    console.log('‚úÖ WebSocket —Å–µ—Ä–≤–µ—Ä —É—Å–ø—ñ—à–Ω–æ –∑–∞–∫—Ä–∏—Ç–æ');
    process.exit(0);
  });
});

// –õ–æ–≥—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Å–µ—Ä–≤–µ—Ä–∞
console.log(`üì° WebSocket —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤–∏–π –¥–æ –ø—Ä–∏–π–æ–º—É –ø—ñ–¥–∫–ª—é—á–µ–Ω—å –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
console.log(`üåê –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ wss://your-domain.com –∞–±–æ ws://localhost:${PORT} –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è`);
